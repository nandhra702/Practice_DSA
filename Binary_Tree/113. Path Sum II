/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void dfs(TreeNode* root,int target, vector<vector<int>>&result,vector<int>&path,int currsum){

        if(!root){
            return;
        }
        
        currsum+=root->val;
        path.push_back(root->val);
        
        if(!root->left && !root->right && currsum== target){
            result.push_back(path);
        }

        dfs(root->left,target,result,path,currsum);
        dfs(root->right,target,result,path,currsum);
        path.pop_back(); //as its a vector

    }

    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>result;
        vector<int>path;
        dfs(root,targetSum,result,path,0);
        return result;

    }
};
