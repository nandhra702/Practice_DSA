class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int>ans;
        deque<int>dq;   //holds indexes

        for(int i=0;i<nums.size();i++){
            
            if(!dq.empty() && dq.front()==i-k){
                dq.pop_front();
            }
            //because, every window ranges from i-k+1 to i. so, element i-k is outside window.

            
            while(!dq.empty() && nums[dq.back()]<nums[i]){
                dq.pop_back();
            }
            

            
            //if nothing happens
            dq.push_back(i); //we store only the indexes
            if(i>=k-1){         //means we have reached our window size
                ans.push_back(nums[dq.front()]);
            }

        }
        return ans;
    }
};
